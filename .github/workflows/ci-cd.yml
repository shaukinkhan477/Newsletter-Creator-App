name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest # Use Ubuntu for the build environment

    steps:
      # Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx for multi-platform builds (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # âœ… Install Docker Compose (Fix for 'command not found' error)
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Cache Docker layers to speed up the build process
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build Docker images for frontend, backend, and MongoDB containers
      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.yml build

      # Log in to DockerHub (or other container registries if needed)
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the Docker images to DockerHub (optional, if deploying to DockerHub)
      - name: Push Docker images
        run: |
          docker-compose -f docker-compose.yml push

      # Deploy to Firebase (for frontend deployment)
      - name: Deploy to Firebase (Frontend)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          npm install -g firebase-tools
          firebase deploy --token "$FIREBASE_TOKEN" --only hosting

      # Deploy Backend (Docker containers, AWS, or any server you use)
      - name: Deploy to Backend (AWS or other)
        run: |
          # Example if you're deploying to AWS ECS or another platform
          docker-compose -f docker-compose.yml up -d
